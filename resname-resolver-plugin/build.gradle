apply plugin: 'java-gradle-plugin'
apply plugin: 'kotlin'

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'name.wildswift.android'
version = publish_version

gradlePlugin {
  plugins {
    wsAndroidResourceNames {
      id = 'ws-android-resource-names'
      implementationClass = 'name.wildswift.android.resnames.WsAndroidResourceNamesPlugin'
    }
  }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar, javadocJar
}

dependencies {

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

  implementation 'com.android.tools.build:gradle:3.1.3'

  testImplementation 'junit:junit:4.12'
  testImplementation gradleTestKit()
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/libs/resname-resolver-plugin-${this.version}.jar")
            artifact sourcesJar
            artifact javadocJar

            groupId this.group
            artifactId 'resname-resolver'
            version this.version

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['Production']
    pkg {
        repo = 'general'
        name = 'resname-resolver'
        licenses = ['Apache-2.0']
        publish = true
        publicDownloadNumbers = true
        vcsUrl = 'https://github.com/wild-swift/ws-resource-name-resolver-plugin.git'
        version {
            name = publish_version
            desc = 'First alpha version'
            released = new Date()
            vcsTag = publish_version
        }
    }
}